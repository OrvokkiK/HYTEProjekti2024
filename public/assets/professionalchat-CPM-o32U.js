import"./style-Bvx2onkj.js";import{f as r}from"./fetch-dnjvk_SN.js";import{s as _}from"./toast-B-6j1RQv.js";document.addEventListener("DOMContentLoaded",function(){const k=document.getElementById("send-button"),h=document.getElementById("message-content"),i=document.getElementById("recipient-id"),c=document.getElementById("messages-container"),g=document.getElementById("user-list"),a=localStorage.getItem("token"),l=localStorage.getItem("user_id");console.log("User ID on load:",l);let d=null;const L=document.querySelector(".menu-toggle"),C=document.querySelector(".menu");L.addEventListener("click",function(){C.classList.toggle("show")}),k.addEventListener("click",U),M();async function M(){r("http://localhost:3000/api/student/",{headers:{Authorization:`Bearer ${a}`}}).then(t=>{B(t)}).catch(t=>{console.error("Error fetching users:",t)})}function B(n){g.innerHTML="",n.forEach(t=>{const e=document.createElement("li");e.textContent=t.username,e.dataset.userId=t.user_id,e.addEventListener("click",v),g.appendChild(e)})}async function u(n){const t=`http://localhost:3000/api/messages/user/${n}`;r(t,{headers:{Authorization:`Bearer ${a}`}}).then(e=>{c.innerHTML="",e.length>0?(d=e[0].conversation_id,e.forEach(o=>y(o.conversation_id))):d=null}).catch(e=>{console.error("Error fetching conversations:",e),c.innerHTML="Ei viestejä."})}async function p(n){const t=`http://localhost:3000/api/users/${n}`;try{const e=await fetch(t,{headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}});if(!e.ok)throw new Error("Failed to fetch user");return(await e.json())[0].username}catch(e){return console.error("Failed to fetch user name:",e),"Nimetön käyttäjä"}}function f(n){const t=document.getElementById("conversation-header");t.textContent=`Keskustelu käyttäjän ${n} kanssa`}async function v(n){const t=n.target.dataset.userId;i.dataset.userId=t;const e=await p(t);f(e),u(t)}function y(n){const t=`http://localhost:3000/api/messages/conversation/${n}`;r(t,{headers:{Authorization:`Bearer ${a}`}}).then(e=>{Array.isArray(e)&&e.length>0?T(e,l):c.innerHTML='<div class="no-messages">Ei viestejä tässä keskustelussa.</div>'}).catch(e=>{console.error(`Viestien haku epäonnistui keskustelulle ${n}:`,e)})}function T(n,t){const e=document.getElementById("messages-container");e.innerHTML="",n.forEach(o=>{const m=new Date(o.message_sent_at).toLocaleString("fi-FI",{timeZone:"Europe/Helsinki"}),s=document.createElement("div");parseInt(o.sender_id)===parseInt(t)?s.className="message client":s.className="message professional",s.innerHTML=`
      <div class="date">${m}</div>
        <div class="message-text">${o.message_content}</div>
      `,e.appendChild(s)}),n.length===0&&(e.innerHTML='<div class="no-messages">Ei saapuneita viestejä</div>')}async function U(){const n=i.dataset.userId,t=h.value,e=new Date().toISOString().slice(0,19).replace("T"," "),o={conversation_id:d,sender_id:l,recipient_id:n,message_content:t,message_sent_at:e},I="http://localhost:3000/api/messages",m={method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify(o)};try{const s=await r(I,m);if(console.log(s.conversation_id),s.conversation_id){console.log("Message sent successfully");let E=s.conversation_id;console.log(E),h.value="",y(E)}else console.error("Viestin lähettäminen epäonnistui"),_("Viestin lähettäminen epäonnistui")}catch(s){console.error(s),_("Viestin lähettäminen epäonnistui")}}});
